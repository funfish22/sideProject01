{"version":3,"sources":["resources/component/molecules/Card/index.js","resources/component/molecules/Tabs/TabPanel.js","resources/component/molecules/Tabs/index.js","../node_modules/@material-ui/core/esm/Link/Link.js","../node_modules/@material-ui/core/esm/internal/svg-icons/MoreHoriz.js","../node_modules/@material-ui/core/esm/Breadcrumbs/BreadcrumbCollapsed.js","../node_modules/@material-ui/core/esm/Breadcrumbs/Breadcrumbs.js","serviceCenter/containers/Villagers/VillagersPageContainer.js","pages/default/Villagers/index.js"],"names":["useStyles","makeStyles","media","height","mediaTitle","margin","CardRoot","props","dispatch","useDispatch","classes","title","id","imgUrl","Card","CardActionArea","component","Link","to","onClick","ActionVillager","selectVillager","CardMedia","image","Typography","gutterBottom","align","className","TabPanel","children","value","index","other","role","hidden","aria-labelledby","Box","theme","card","padding","spacing","CardsRoot","cards","match","useRouteMatch","newCards","filter","row","star","sex","path","map","Grid","item","xs","sm","md","TabsRoot","tabs","useTheme","useSelector","state","Villagers","lists","useState","setValue","Tabs","onChange","event","newValue","aria-label","Tab","label","a11yProps","mx","axis","direction","onChangeIndex","dir","container","React","ref","_props$color","color","_props$component","onBlur","onFocus","TypographyClasses","_props$underline","underline","_props$variant","variant","_objectWithoutProperties","_useIsFocusVisible","useIsFocusVisible","isFocusVisible","onBlurVisible","focusVisibleRef","_React$useState","focusVisible","setFocusVisible","handlerRef","useForkRef","_extends","clsx","root","concat","capitalize","button","withStyles","underlineNone","textDecoration","underlineHover","underlineAlways","position","WebkitTapHighlightColor","backgroundColor","outline","border","borderRadius","cursor","userSelect","verticalAlign","borderStyle","name","createSvgIcon","d","display","marginLeft","marginRight","palette","grey","boxShadow","shadows","emphasize","icon","width","ButtonBase","focusRipple","MoreHorizIcon","Breadcrumbs","Component","_props$expandText","expandText","_props$itemsAfterColl","itemsAfterCollapse","_props$itemsBeforeCol","itemsBeforeCollapse","_props$maxItems","maxItems","_props$separator","separator","expanded","setExpanded","allItems","toArray","child","li","key","ol","items","reduce","acc","current","length","push","insertSeparators","_toConsumableArray","slice","BreadcrumbCollapsed","focusable","currentTarget","parentNode","querySelector","focus","renderItemsBeforeAndAfter","flexWrap","alignItems","listStyle","withVillagersPageContainer","VillagersPageContainer","villagersTabs","hoistNonReactStatic","Detail","lazy","marginTop","marginBottom","VillagersWrapperWithContainer","exact","Container","my","RouterLink"],"mappings":"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","file":"Villagers.5a87a27fbaab54a5a427.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch } from 'react-redux';\r\nimport ActionVillager from '@reducers/Villagers/action';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { Typography, Card, CardActionArea, CardMedia } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    media: {\r\n        height: 100,\r\n    },\r\n    mediaTitle: {\r\n        margin: 0,\r\n    },\r\n}));\r\n\r\nfunction CardRoot(props) {\r\n    const dispatch = useDispatch();\r\n    const classes = useStyles();\r\n\r\n    const { title, id, imgUrl } = props;\r\n\r\n    return (\r\n        <Card>\r\n            <CardActionArea\r\n                component={Link}\r\n                to={`Villagers/${id}`}\r\n                onClick={() => dispatch(ActionVillager.selectVillager(id))}\r\n            >\r\n                <CardMedia component=\"img\" height=\"100\" image={imgUrl} title=\"Contemplative Reptile\" />\r\n                <Typography gutterBottom component=\"p\" align=\"center\" className={classes.mediaTitle}>\r\n                    {title}\r\n                </Typography>\r\n            </CardActionArea>\r\n        </Card>\r\n    );\r\n}\r\n\r\nCardRoot.propTypes = {\r\n    title: PropTypes.string,\r\n    id: PropTypes.string,\r\n    imgUrl: PropTypes.string,\r\n};\r\n\r\nexport default CardRoot;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Box } from '@material-ui/core';\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && <Box>{children}</Box>}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nexport default TabPanel;\r\n","import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { useRouteMatch } from 'react-router-dom';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport { useTheme, makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Card from '@component/molecules/Card';\r\nimport TabPanel from './TabPanel';\r\n\r\nimport { Grid, Tabs, Tab, Box } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        padding: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `simple-tab-${index}`,\r\n        'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nfunction CardsRoot({ cards, value }) {\r\n    const match = useRouteMatch();\r\n    const classes = useStyles();\r\n    let newCards = [];\r\n\r\n    switch (value) {\r\n        case 0:\r\n            newCards = cards.filter((row) => {\r\n                return row.star;\r\n            });\r\n            break;\r\n        case 1:\r\n            newCards = cards;\r\n            break;\r\n        case 2:\r\n            newCards = cards;\r\n            break;\r\n        case 3:\r\n            newCards = cards.filter((row) => {\r\n                return row.sex === 'Male';\r\n            });\r\n            break;\r\n        case 4:\r\n            newCards = cards.filter((row) => {\r\n                return row.sex === 'Female';\r\n            });\r\n            break;\r\n    }\r\n\r\n    if (match.path === '/') {\r\n        newCards = cards;\r\n    }\r\n\r\n    return newCards.map((row) => (\r\n        <Grid item xs={4} sm={3} md={2} key={row.id} className={classes.card}>\r\n            <Card title={row.title} id={row.id} imgUrl={row.imgUrl} />\r\n        </Grid>\r\n    ));\r\n}\r\n\r\nfunction TabsRoot(props) {\r\n    const { tabs } = props;\r\n\r\n    const theme = useTheme();\r\n\r\n    const cards = useSelector((state) => state.Villagers.lists);\r\n\r\n    const [value, setValue] = useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    const handleChangeIndex = (index) => {\r\n        setValue(index);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\r\n                {tabs.map((row, index) => (\r\n                    <Tab key={index} label={row.title} {...a11yProps(index)} />\r\n                ))}\r\n            </Tabs>\r\n            <Box mx={-1}>\r\n                <SwipeableViews\r\n                    axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n                    index={value}\r\n                    onChangeIndex={handleChangeIndex}\r\n                >\r\n                    {tabs.map((row, index) => (\r\n                        <TabPanel key={index} value={value} index={index} dir={theme.direction}>\r\n                            <Grid container>\r\n                                <CardsRoot cards={cards} value={value} />\r\n                            </Grid>\r\n                        </TabPanel>\r\n                    ))}\r\n                </SwipeableViews>\r\n            </Box>\r\n        </>\r\n    );\r\n}\r\n\r\nTabsRoot.propTypes = {\r\n    tabs: PropTypes.array,\r\n};\r\n\r\nexport default TabsRoot;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nimport { elementTypeAcceptingRef } from '@material-ui/utils';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the root element if `underline=\"none\"`. */\n  underlineNone: {\n    textDecoration: 'none'\n  },\n\n  /* Styles applied to the root element if `underline=\"hover\"`. */\n  underlineHover: {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  },\n\n  /* Styles applied to the root element if `underline=\"always\"`. */\n  underlineAlways: {\n    textDecoration: 'underline'\n  },\n  // Same reset as ButtonBase.root\n\n  /* Styles applied to the root element if `component=\"button\"`. */\n  button: {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    '-moz-appearance': 'none',\n    // Reset\n    '-webkit-appearance': 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n\n    },\n    '&$focusVisible': {\n      outline: 'auto'\n    }\n  },\n\n  /* Pseudo-class applied to the root element if the link is keyboard focused. */\n  focusVisible: {}\n};\nvar Link = /*#__PURE__*/React.forwardRef(function Link(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'a' : _props$component,\n      onBlur = props.onBlur,\n      onFocus = props.onFocus,\n      TypographyClasses = props.TypographyClasses,\n      _props$underline = props.underline,\n      underline = _props$underline === void 0 ? 'hover' : _props$underline,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'inherit' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\"]);\n\n  var _useIsFocusVisible = useIsFocusVisible(),\n      isFocusVisible = _useIsFocusVisible.isFocusVisible,\n      onBlurVisible = _useIsFocusVisible.onBlurVisible,\n      focusVisibleRef = _useIsFocusVisible.ref;\n\n  var _React$useState = React.useState(false),\n      focusVisible = _React$useState[0],\n      setFocusVisible = _React$useState[1];\n\n  var handlerRef = useForkRef(ref, focusVisibleRef);\n\n  var handleBlur = function handleBlur(event) {\n    if (focusVisible) {\n      onBlurVisible();\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n\n  var handleFocus = function handleFocus(event) {\n    if (isFocusVisible(event)) {\n      setFocusVisible(true);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    className: clsx(classes.root, classes[\"underline\".concat(capitalize(underline))], className, focusVisible && classes.focusVisible, component === 'button' && classes.button),\n    classes: TypographyClasses,\n    color: color,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    variant: variant\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes = {\n  /**\n   * The content of the link.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the link.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * `classes` prop applied to the [`Typography`](/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n\n  /**\n   * Controls when the link should have an underline.\n   */\n  underline: PropTypes.oneOf(['none', 'hover', 'always']),\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiLink'\n})(Link);","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreHoriz');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '../styles/withStyles';\nimport { emphasize } from '../styles/colorManipulator';\nimport MoreHorizIcon from '../internal/svg-icons/MoreHoriz';\nimport ButtonBase from '../ButtonBase';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      display: 'flex',\n      marginLeft: theme.spacing(0.5),\n      marginRight: theme.spacing(0.5),\n      backgroundColor: theme.palette.grey[100],\n      color: theme.palette.grey[700],\n      borderRadius: 2,\n      cursor: 'pointer',\n      '&:hover, &:focus': {\n        backgroundColor: theme.palette.grey[200]\n      },\n      '&:active': {\n        boxShadow: theme.shadows[0],\n        backgroundColor: emphasize(theme.palette.grey[200], 0.12)\n      }\n    },\n    icon: {\n      width: 24,\n      height: 16\n    }\n  };\n};\n/**\n * @ignore - internal component.\n */\n\n\nfunction BreadcrumbCollapsed(props) {\n  var classes = props.classes,\n      other = _objectWithoutProperties(props, [\"classes\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    component: \"li\",\n    className: classes.root,\n    focusRipple: true\n  }, other), /*#__PURE__*/React.createElement(MoreHorizIcon, {\n    className: classes.icon\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? BreadcrumbCollapsed.propTypes = {\n  /**\n   * @ignore\n   */\n  classes: PropTypes.object.isRequired\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateBreadcrumbCollapsed'\n})(BreadcrumbCollapsed);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport BreadcrumbCollapsed from './BreadcrumbCollapsed';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the ol element. */\n  ol: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n    padding: 0,\n    margin: 0,\n    listStyle: 'none'\n  },\n\n  /* Styles applied to the li element. */\n  li: {},\n\n  /* Styles applied to the separator element. */\n  separator: {\n    display: 'flex',\n    userSelect: 'none',\n    marginLeft: 8,\n    marginRight: 8\n  }\n};\n\nfunction insertSeparators(items, className, separator) {\n  return items.reduce(function (acc, current, index) {\n    if (index < items.length - 1) {\n      acc = acc.concat(current, /*#__PURE__*/React.createElement(\"li\", {\n        \"aria-hidden\": true,\n        key: \"separator-\".concat(index),\n        className: className\n      }, separator));\n    } else {\n      acc.push(current);\n    }\n\n    return acc;\n  }, []);\n}\n\nvar Breadcrumbs = /*#__PURE__*/React.forwardRef(function Breadcrumbs(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'nav' : _props$component,\n      _props$expandText = props.expandText,\n      expandText = _props$expandText === void 0 ? 'Show path' : _props$expandText,\n      _props$itemsAfterColl = props.itemsAfterCollapse,\n      itemsAfterCollapse = _props$itemsAfterColl === void 0 ? 1 : _props$itemsAfterColl,\n      _props$itemsBeforeCol = props.itemsBeforeCollapse,\n      itemsBeforeCollapse = _props$itemsBeforeCol === void 0 ? 1 : _props$itemsBeforeCol,\n      _props$maxItems = props.maxItems,\n      maxItems = _props$maxItems === void 0 ? 8 : _props$maxItems,\n      _props$separator = props.separator,\n      separator = _props$separator === void 0 ? '/' : _props$separator,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"expandText\", \"itemsAfterCollapse\", \"itemsBeforeCollapse\", \"maxItems\", \"separator\"]);\n\n  var _React$useState = React.useState(false),\n      expanded = _React$useState[0],\n      setExpanded = _React$useState[1];\n\n  var renderItemsBeforeAndAfter = function renderItemsBeforeAndAfter(allItems) {\n    var handleClickExpand = function handleClickExpand(event) {\n      setExpanded(true); // The clicked element received the focus but gets removed from the DOM.\n      // Let's keep the focus in the component after expanding.\n\n      var focusable = event.currentTarget.parentNode.querySelector('a[href],button,[tabindex]');\n\n      if (focusable) {\n        focusable.focus();\n      }\n    }; // This defends against someone passing weird input, to ensure that if all\n    // items would be shown anyway, we just show all items without the EllipsisItem\n\n\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(['Material-UI: You have provided an invalid combination of props to the Breadcrumbs.', \"itemsAfterCollapse={\".concat(itemsAfterCollapse, \"} + itemsBeforeCollapse={\").concat(itemsBeforeCollapse, \"} >= maxItems={\").concat(maxItems, \"}\")].join('\\n'));\n      }\n\n      return allItems;\n    }\n\n    return [].concat(_toConsumableArray(allItems.slice(0, itemsBeforeCollapse)), [/*#__PURE__*/React.createElement(BreadcrumbCollapsed, {\n      \"aria-label\": expandText,\n      key: \"ellipsis\",\n      onClick: handleClickExpand\n    })], _toConsumableArray(allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)));\n  };\n\n  var allItems = React.Children.toArray(children).filter(function (child) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The Breadcrumbs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.isValidElement(child);\n  }).map(function (child, index) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: classes.li,\n      key: \"child-\".concat(index)\n    }, child);\n  });\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    ref: ref,\n    component: Component,\n    color: \"textSecondary\",\n    className: clsx(classes.root, className)\n  }, other), /*#__PURE__*/React.createElement(\"ol\", {\n    className: classes.ol\n  }, insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The breadcrumb children.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Override the default label for the expand button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  expandText: PropTypes.string,\n\n  /**\n   * If max items is exceeded, the number of items to show after the ellipsis.\n   */\n  itemsAfterCollapse: PropTypes.number,\n\n  /**\n   * If max items is exceeded, the number of items to show before the ellipsis.\n   */\n  itemsBeforeCollapse: PropTypes.number,\n\n  /**\n   * Specifies the maximum number of breadcrumbs to display. When there are more\n   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`\n   * will be shown, with an ellipsis in between.\n   */\n  maxItems: PropTypes.number,\n\n  /**\n   * Custom separator node.\n   */\n  separator: PropTypes.node\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiBreadcrumbs'\n})(Breadcrumbs);","import React from 'react';\r\nimport hoistNonReactStatic from 'hoist-non-react-statics';\r\nimport { useSelector } from 'react-redux';\r\n\r\nfunction withVillagersPageContainer({ Component }) {\r\n    function VillagersPageContainer() {\r\n        const villagersTabs = useSelector((state) => state.Villagers.villagersTabs);\r\n        return <Component villagersTabs={villagersTabs} />;\r\n    }\r\n\r\n    hoistNonReactStatic(VillagersPageContainer, withVillagersPageContainer);\r\n    return VillagersPageContainer;\r\n}\r\n\r\nexport default withVillagersPageContainer;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link as RouterLink, Switch, Route, useRouteMatch } from 'react-router-dom';\r\nimport withVillagersPageContainer from '@serviceCenter/containers/Villagers/VillagersPageContainer';\r\n\r\nimport Tabs from '@component/molecules/Tabs';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Container, Box, Typography, Breadcrumbs, Link } from '@material-ui/core';\r\n\r\nconst Detail = React.lazy(() =>\r\n    import(/*webpackChunkName:\"VillagersDetail\"*/ /*webpackMode:\"lazy\"*/ '@page/default/Villagers/detail')\r\n);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    title: {\r\n        marginTop: theme.spacing(3),\r\n        marginBottom: theme.spacing(3),\r\n    },\r\n}));\r\n\r\nfunction VillagersPage(props) {\r\n    const match = useRouteMatch();\r\n    const classes = useStyles();\r\n\r\n    const { villagersTabs } = props;\r\n\r\n    return (\r\n        <Switch>\r\n            <Route exact path={match.path}>\r\n                <Container component={Box} my={3} color=\"primary.main\">\r\n                    <Box>\r\n                        <Breadcrumbs aria-label=\"breadcrumb\">\r\n                            <Link component={RouterLink} color=\"inherit\" to=\"/\">\r\n                                Home\r\n                            </Link>\r\n                            <Typography color=\"textPrimary\">Villagers</Typography>\r\n                        </Breadcrumbs>\r\n                    </Box>\r\n                    <Typography component=\"h2\" variant=\"h5\" className={classes.title}>\r\n                        Title\r\n                    </Typography>\r\n                    <Tabs tabs={villagersTabs} />\r\n                </Container>\r\n            </Route>\r\n            <Route path={`${match.path}/:id`}>\r\n                <Detail />\r\n            </Route>\r\n        </Switch>\r\n    );\r\n}\r\n\r\nVillagersPage.propTypes = {\r\n    villagersTabs: PropTypes.array,\r\n};\r\n\r\nconst VillagersWrapperWithContainer = withVillagersPageContainer({\r\n    Component: VillagersPage,\r\n});\r\n\r\nexport default VillagersWrapperWithContainer;\r\n"],"sourceRoot":""}