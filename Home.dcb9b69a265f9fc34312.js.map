{"version":3,"sources":["resources/component/molecules/Card/index.js","resources/component/molecules/Tabs/TabPanel.js","resources/component/molecules/Tabs/index.js","serviceCenter/containers/Home/HomePageContainer.js","pages/default/Home/index.js"],"names":["useStyles","makeStyles","media","height","mediaTitle","margin","CardRoot","props","dispatch","useDispatch","classes","title","id","imgUrl","Card","CardActionArea","component","Link","to","onClick","ActionVillager","selectVillager","CardMedia","image","Typography","gutterBottom","align","className","TabPanel","children","value","index","other","role","hidden","aria-labelledby","Box","theme","card","padding","spacing","CardsRoot","cards","match","useRouteMatch","newCards","filter","row","star","sex","path","map","Grid","item","xs","sm","md","TabsRoot","tabs","useTheme","useSelector","state","Villagers","lists","useState","setValue","Tabs","onChange","event","newValue","aria-label","Tab","label","a11yProps","mx","axis","direction","onChangeIndex","dir","container","withHomePageContainer","Component","HomePageContainer","banner","Home","homeTabs","speed","hoistNonReactStatic","SwiperCore","use","Pagination","Autoplay","marginTop","marginBottom","swiperRoot","backgroundColor","palette","primary","main","HomePageWrapperWithContainer","slidesPerView","pagination","clickable","loop","autoplay","delay","alt","Container","my","color","variant"],"mappings":"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","file":"Home.dcb9b69a265f9fc34312.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch } from 'react-redux';\r\nimport ActionVillager from '@reducers/Villagers/action';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { Typography, Card, CardActionArea, CardMedia } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    media: {\r\n        height: 100,\r\n    },\r\n    mediaTitle: {\r\n        margin: 0,\r\n    },\r\n}));\r\n\r\nfunction CardRoot(props) {\r\n    const dispatch = useDispatch();\r\n    const classes = useStyles();\r\n\r\n    const { title, id, imgUrl } = props;\r\n\r\n    return (\r\n        <Card>\r\n            <CardActionArea\r\n                component={Link}\r\n                to={`Villagers/${id}`}\r\n                onClick={() => dispatch(ActionVillager.selectVillager(id))}\r\n            >\r\n                <CardMedia component=\"img\" height=\"100\" image={imgUrl} title=\"Contemplative Reptile\" />\r\n                <Typography gutterBottom component=\"p\" align=\"center\" className={classes.mediaTitle}>\r\n                    {title}\r\n                </Typography>\r\n            </CardActionArea>\r\n        </Card>\r\n    );\r\n}\r\n\r\nCardRoot.propTypes = {\r\n    title: PropTypes.string,\r\n    id: PropTypes.string,\r\n    imgUrl: PropTypes.string,\r\n};\r\n\r\nexport default CardRoot;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Box } from '@material-ui/core';\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && <Box>{children}</Box>}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nexport default TabPanel;\r\n","import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { useRouteMatch } from 'react-router-dom';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport { useTheme, makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Card from '@component/molecules/Card';\r\nimport TabPanel from './TabPanel';\r\n\r\nimport { Grid, Tabs, Tab, Box } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        padding: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `simple-tab-${index}`,\r\n        'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nfunction CardsRoot({ cards, value }) {\r\n    const match = useRouteMatch();\r\n    const classes = useStyles();\r\n    let newCards = [];\r\n\r\n    switch (value) {\r\n        case 0:\r\n            newCards = cards.filter((row) => {\r\n                return row.star;\r\n            });\r\n            break;\r\n        case 1:\r\n            newCards = cards;\r\n            break;\r\n        case 2:\r\n            newCards = cards;\r\n            break;\r\n        case 3:\r\n            newCards = cards.filter((row) => {\r\n                return row.sex === 'Male';\r\n            });\r\n            break;\r\n        case 4:\r\n            newCards = cards.filter((row) => {\r\n                return row.sex === 'Female';\r\n            });\r\n            break;\r\n    }\r\n\r\n    if (match.path === '/') {\r\n        newCards = cards;\r\n    }\r\n\r\n    return newCards.map((row) => (\r\n        <Grid item xs={4} sm={3} md={2} key={row.id} className={classes.card}>\r\n            <Card title={row.title} id={row.id} imgUrl={row.imgUrl} />\r\n        </Grid>\r\n    ));\r\n}\r\n\r\nfunction TabsRoot(props) {\r\n    const { tabs } = props;\r\n\r\n    const theme = useTheme();\r\n\r\n    const cards = useSelector((state) => state.Villagers.lists);\r\n\r\n    const [value, setValue] = useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    const handleChangeIndex = (index) => {\r\n        setValue(index);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\r\n                {tabs.map((row, index) => (\r\n                    <Tab key={index} label={row.title} {...a11yProps(index)} />\r\n                ))}\r\n            </Tabs>\r\n            <Box mx={-1}>\r\n                <SwipeableViews\r\n                    axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n                    index={value}\r\n                    onChangeIndex={handleChangeIndex}\r\n                >\r\n                    {tabs.map((row, index) => (\r\n                        <TabPanel key={index} value={value} index={index} dir={theme.direction}>\r\n                            <Grid container>\r\n                                <CardsRoot cards={cards} value={value} />\r\n                            </Grid>\r\n                        </TabPanel>\r\n                    ))}\r\n                </SwipeableViews>\r\n            </Box>\r\n        </>\r\n    );\r\n}\r\n\r\nTabsRoot.propTypes = {\r\n    tabs: PropTypes.array,\r\n};\r\n\r\nexport default TabsRoot;\r\n","import React from 'react';\r\nimport hoistNonReactStatic from 'hoist-non-react-statics';\r\nimport { useSelector } from 'react-redux';\r\n\r\nfunction withHomePageContainer({ Component }) {\r\n    function HomePageContainer() {\r\n        const banner = useSelector((state) => state.Home.banner);\r\n        const homeTabs = useSelector((state) => state.Home.homeTabs);\r\n\r\n        const { speed, lists } = banner;\r\n\r\n        return <Component speed={speed} lists={lists} homeTabs={homeTabs} />;\r\n    }\r\n\r\n    hoistNonReactStatic(HomePageContainer, withHomePageContainer);\r\n    return HomePageContainer;\r\n}\r\n\r\nexport default withHomePageContainer;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport withHomePageContainer from '@serviceCenter/containers/Home/HomePageContainer';\r\n\r\nimport SwiperCore, { Pagination, Autoplay } from 'swiper/core';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport Tabs from '@component/molecules/Tabs';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { Container, Box, Typography, CardMedia } from '@material-ui/core';\r\n\r\nimport 'swiper/swiper.scss';\r\nimport 'swiper/components/pagination/pagination.scss';\r\n\r\nSwiperCore.use([Pagination, Autoplay]);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    title: {\r\n        marginTop: theme.spacing(3),\r\n        marginBottom: theme.spacing(3),\r\n    },\r\n    media: {\r\n        height: 100,\r\n    },\r\n    mediaTitle: {\r\n        margin: 0,\r\n    },\r\n    swiperRoot: {\r\n        '& .swiper-pagination-bullet': {\r\n            backgroundColor: theme.palette.primary.main,\r\n        },\r\n    },\r\n}));\r\n\r\nfunction HomePage(props) {\r\n    const { speed, lists, homeTabs } = props;\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <>\r\n            <Box className={classes.swiperRoot}>\r\n                <Swiper slidesPerView={1} pagination={{ clickable: true }} loop autoplay={{ delay: speed }}>\r\n                    {lists &&\r\n                        lists.map((row, index) => {\r\n                            return (\r\n                                <SwiperSlide key={index}>\r\n                                    <CardMedia component=\"img\" image={row.imgUrl} alt={row.title} />\r\n                                </SwiperSlide>\r\n                            );\r\n                        })}\r\n                </Swiper>\r\n            </Box>\r\n            <Container component={Box} my={3} color=\"primary.main\">\r\n                <Typography component=\"h2\" variant=\"h5\" className={classes.title}>\r\n                    Title\r\n                </Typography>\r\n                <Tabs tabs={homeTabs} />\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nHomePage.propTypes = {\r\n    speed: PropTypes.number,\r\n    lists: PropTypes.array,\r\n    homeTabs: PropTypes.array,\r\n};\r\n\r\nconst HomePageWrapperWithContainer = withHomePageContainer({\r\n    Component: HomePage,\r\n});\r\n\r\nexport default HomePageWrapperWithContainer;\r\n"],"sourceRoot":""}