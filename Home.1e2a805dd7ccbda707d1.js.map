{"version":3,"sources":["serviceCenter/containers/Home/HomePageContainer.js","resources/component/molecules/Card/index.js","resources/component/molecules/Tabs/TabPanel.js","resources/component/molecules/Tabs/index.js","pages/default/Home/index.js"],"names":["withHomePageContainer","Component","HomePageContainer","banner","useSelector","state","Home","speed","lists","hoistNonReactStatic","useStyles","makeStyles","theme","media","height","mediaTitle","margin","CardRoot","props","dispatch","useDispatch","classes","title","id","imgUrl","Card","CardActionArea","component","Link","to","onClick","ActionVillager","selectVillager","CardMedia","image","Typography","gutterBottom","align","className","TabPanel","children","value","index","other","role","hidden","aria-labelledby","Box","card","padding","spacing","a11yProps","TabsRoot","useTheme","cards","Villagers","useState","setValue","Tabs","onChange","event","newValue","aria-label","Tab","label","mx","axis","direction","onChangeIndex","dir","Grid","container","map","row","item","xs","sm","md","SwiperCore","use","Pagination","Autoplay","marginTop","marginBottom","swiperRoot","backgroundColor","palette","primary","main","HomePageWrapperWithContainer","slidesPerView","pagination","clickable","loop","autoplay","delay","alt","Container","color","mb","variant"],"mappings":"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","file":"Home.1e2a805dd7ccbda707d1.js","sourcesContent":["import hoistNonReactStatic from 'hoist-non-react-statics';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nfunction withHomePageContainer({ Component }) {\r\n    function HomePageContainer() {\r\n        const banner = useSelector((state) => state.Home.banner);\r\n\r\n        const { speed, lists } = banner;\r\n\r\n        return <Component speed={speed} lists={lists} />;\r\n    }\r\n\r\n    hoistNonReactStatic(HomePageContainer, withHomePageContainer);\r\n    return HomePageContainer;\r\n}\r\n\r\nexport default withHomePageContainer;\r\n","import { Link } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport ActionVillager from '@reducers/Villagers/action';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { Typography, Card, CardActionArea, CardMedia } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    media: {\r\n        height: 100,\r\n    },\r\n    mediaTitle: {\r\n        margin: 0,\r\n    },\r\n}));\r\n\r\nfunction CardRoot(props) {\r\n    const dispatch = useDispatch();\r\n    const classes = useStyles();\r\n\r\n    const { title, id, imgUrl } = props;\r\n\r\n    return (\r\n        <Card>\r\n            <CardActionArea\r\n                component={Link}\r\n                to={`Villagers/${id}`}\r\n                onClick={() => dispatch(ActionVillager.selectVillager(id))}\r\n            >\r\n                <CardMedia component=\"img\" height=\"100\" image={imgUrl} title=\"Contemplative Reptile\" />\r\n                <Typography gutterBottom component=\"p\" align=\"center\" className={classes.mediaTitle}>\r\n                    {title}\r\n                </Typography>\r\n            </CardActionArea>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default CardRoot;\r\n","import PropTypes from 'prop-types';\r\nimport { Box } from '@material-ui/core';\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && <Box>{children}</Box>}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nexport default TabPanel;\r\n","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport { useTheme, makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Card from '@component/molecules/Card';\r\nimport TabPanel from './TabPanel';\r\n\r\nimport { Grid, Tabs, Tab, Box } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        padding: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `simple-tab-${index}`,\r\n        'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nfunction TabsRoot() {\r\n    const theme = useTheme();\r\n    const classes = useStyles();\r\n\r\n    const cards = useSelector((state) => state.Villagers.lists);\r\n\r\n    const [value, setValue] = useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    const handleChangeIndex = (index) => {\r\n        setValue(index);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\r\n                <Tab label=\"Item One\" {...a11yProps(0)} />\r\n                <Tab label=\"Item Two\" {...a11yProps(1)} />\r\n                <Tab label=\"Item Three\" {...a11yProps(2)} />\r\n            </Tabs>\r\n            <Box mx={-1}>\r\n                <SwipeableViews\r\n                    axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n                    index={value}\r\n                    onChangeIndex={handleChangeIndex}\r\n                >\r\n                    <TabPanel value={value} index={0} dir={theme.direction}>\r\n                        <Grid container>\r\n                            {cards.map((row) => (\r\n                                <Grid item xs={4} sm={3} md={2} key={row.id} className={classes.card}>\r\n                                    <Card title={row.title} id={row.id} imgUrl={row.imgUrl} />\r\n                                </Grid>\r\n                            ))}\r\n                        </Grid>\r\n                    </TabPanel>\r\n                    <TabPanel value={value} index={1} dir={theme.direction}>\r\n                        <Grid container>\r\n                            {cards.map((row) => (\r\n                                <Grid item xs={4} sm={3} md={2} key={row.id} className={classes.card}>\r\n                                    <Card title={row.title} id={row.id} imgUrl={row.imgUrl} />\r\n                                </Grid>\r\n                            ))}\r\n                        </Grid>\r\n                    </TabPanel>\r\n                    <TabPanel value={value} index={2} dir={theme.direction}>\r\n                        <Grid container>\r\n                            {cards.map((row) => (\r\n                                <Grid item xs={4} sm={3} md={2} key={row.id} className={classes.card}>\r\n                                    <Card title={row.title} id={row.id} imgUrl={row.imgUrl} />\r\n                                </Grid>\r\n                            ))}\r\n                        </Grid>\r\n                    </TabPanel>\r\n                </SwipeableViews>\r\n            </Box>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default TabsRoot;\r\n","import React from 'react';\r\nimport withHomePageContainer from '@serviceCenter/containers/Home/HomePageContainer';\r\n\r\nimport SwiperCore, { Pagination, Autoplay } from 'swiper/core';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport Tabs from '@component/molecules/Tabs';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { Container, Box, Typography, CardMedia } from '@material-ui/core';\r\n\r\nimport 'swiper/swiper.scss';\r\nimport 'swiper/components/pagination/pagination.scss';\r\n\r\nSwiperCore.use([Pagination, Autoplay]);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    title: {\r\n        marginTop: theme.spacing(3),\r\n        marginBottom: theme.spacing(3),\r\n    },\r\n    media: {\r\n        height: 100,\r\n    },\r\n    mediaTitle: {\r\n        margin: 0,\r\n    },\r\n    swiperRoot: {\r\n        '& .swiper-pagination-bullet': {\r\n            backgroundColor: theme.palette.primary.main,\r\n        },\r\n    },\r\n}));\r\n\r\nfunction HomePage(props) {\r\n    const { speed, lists } = props;\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <>\r\n            <Box className={classes.swiperRoot}>\r\n                <Swiper slidesPerView={1} pagination={{ clickable: true }} loop autoplay={{ delay: speed }}>\r\n                    {lists &&\r\n                        lists.map((row, index) => {\r\n                            return (\r\n                                <SwiperSlide key={index}>\r\n                                    <CardMedia component=\"img\" image={row.imgUrl} alt={row.title} />\r\n                                </SwiperSlide>\r\n                            );\r\n                        })}\r\n                </Swiper>\r\n            </Box>\r\n            <Container>\r\n                <Box color=\"primary.main\" mb={2}>\r\n                    <Typography component=\"h2\" variant=\"h5\" className={classes.title}>\r\n                        Title\r\n                    </Typography>\r\n                    <Tabs />\r\n                </Box>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nconst HomePageWrapperWithContainer = withHomePageContainer({\r\n    Component: HomePage,\r\n});\r\n\r\nexport default HomePageWrapperWithContainer;\r\n"],"sourceRoot":""}